#################################################
###             MASTER THESIS                 ###
### by: Juan Francisco Hern√°ndez Garza        ###
### email: juan.hernandez.garza@tuhh.de       ###
#################################################

[General]
network = RRS

# cmdenv settings
cmdenv-express-mode = false
cmdenv-event-banners = false
**.cmdenv-log-level = INFO
cmdenv-log-prefix = %l %C: 
cmdenv-output-file = ${resultdir}/${runid}-log2.txt

# event logging
record-eventlog = false
eventlog-file = ${resultdir}/${runid}-log1.txt

# simulation control parameters
sim-time-limit = 20000s
repeat = 1

# RNG initialization
num-rngs = 1
seed-0-mt = ${repetition}
#seed-1-mt = 54321
#seed-2-mt = 13579
#seed-3-mt = 97531

# statistic collection
**.vector-recording = false
**.scalar-recording = false
**.statistic-recording = false

# network parameters
**.numNodes = 100
**.numberOfNodes = 100


# application layer (promote)
**.notificationGenDistribution = 1 # constant generations every notificationGenInterval interval
**.node[*].promote.notificationGenStartMaxTime = 1500s #3600s
**.node[*].promote.notificationGenInterval = 7200s
**.node[*].promote.notificationValidDuration = 172800s
**.promote.dataPayloadSizeInBytes = 1000
**.promote.dataPacketSizeInBytes = 1000
**.promote.usedRNG = 0 #3
**.promote.logging = 1
**.promote.destinationOriented = false
**.promote.operationMode = 2 # Mode 1: All nodes generate data. Mode 2: Only the specified node index generates data
**.promote.numberOfData = 1 # Number of data generated by the node(s)
**.promote.dataGeneratingNodeIndex = 0 #MUST BE SET TO ZERO


# Forwarding Layer
**.forwardingLayer = 1 # 1-RRS, 2-Keetchi, 3-Epidemic
**.forwarding.maximumCacheSize = 1000000000byte # 1 GB cache
**.forwarding.logging = 1 # 0 disabled, 1 enabled


# wireless interface parameters
**.wirelessIfc.wirelessRange = 200m
**.wirelessIfc.neighbourScanInterval = 5s

# Stationary mobility
**.node[*].mobilityType = "StationaryMobility"
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1000m
**.constraintAreaMaxY = 1000m
**.constraintAreaMaxZ = 0m
**.updateInterval = 0.1s

#**.mobility.initFromDisplayString = false

# Place the nodes at a specific position (without using the display string as a coordinates source)
**.node[*].mobility.initFromDisplayString = false

#Fixed node for best and worst case scenarios
#**.node[0].mobility.initialX = 500m
#**.node[0].mobility.initialY = 500m

#S1
**.node[0..3].mobility.initialX = uniform(50m, 200m)
**.node[0..3].mobility.initialY = uniform(50m, 200m)
#S2
**.node[4..7].mobility.initialX = uniform(200m, 400m)
**.node[4..7].mobility.initialY = uniform(50m, 200m)
#S3
**.node[8..11].mobility.initialX = uniform(400m, 600m)
**.node[8..11].mobility.initialY = uniform(50m, 200m)
#S4
**.node[12..15].mobility.initialX = uniform(600m, 800m)
**.node[12..15].mobility.initialY = uniform(50m, 200m)
#S5
**.node[16..19].mobility.initialX = uniform(800m, 950m)
**.node[16..19].mobility.initialY = uniform(50m, 200m)
#S6
**.node[20..23].mobility.initialX = uniform(50m, 200m)
**.node[20..23].mobility.initialY = uniform(200m, 400m)
#S7
**.node[24..27].mobility.initialX = uniform(200m, 400m)
**.node[24..27].mobility.initialY = uniform(200m, 400m)
#S8
**.node[28..31].mobility.initialX = uniform(400m, 600m)
**.node[28..31].mobility.initialY = uniform(200m, 400m)
#S9
**.node[32..35].mobility.initialX = uniform(600m, 800m)
**.node[32..35].mobility.initialY = uniform(200m, 400m)
#S10
**.node[36..39].mobility.initialX = uniform(800m, 950m)
**.node[36..39].mobility.initialY = uniform(200m, 400m)
#S11
**.node[40..43].mobility.initialX = uniform(50m, 200m)
**.node[40..43].mobility.initialY = uniform(400m, 600m)
#S12
**.node[44..47].mobility.initialX = uniform(200m, 400m)
**.node[44..47].mobility.initialY = uniform(400m, 600m)
#S13
**.node[48..51].mobility.initialX = uniform(400m, 600m)
**.node[48..51].mobility.initialY = uniform(400m, 600m)
#S14
**.node[52..55].mobility.initialX = uniform(600m, 800m)
**.node[52..55].mobility.initialY = uniform(400m, 600m)
#S15
**.node[56..59].mobility.initialX = uniform(800m, 950m)
**.node[56..59].mobility.initialY = uniform(400m, 600m)
#S16
**.node[60..63].mobility.initialX = uniform(50m, 200m)
**.node[60..63].mobility.initialY = uniform(600m, 800m)
#S17
**.node[64..67].mobility.initialX = uniform(200m, 400m)
**.node[64..67].mobility.initialY = uniform(600m, 800m)
#S18
**.node[68..71].mobility.initialX = uniform(400m, 600m)
**.node[68..71].mobility.initialY = uniform(600m, 800m)
#S19
**.node[72..75].mobility.initialX = uniform(600m, 800m)
**.node[72..75].mobility.initialY = uniform(600m, 800m)
#S20
**.node[76..79].mobility.initialX = uniform(800m, 950m)
**.node[76..79].mobility.initialY = uniform(600m, 800m)
#S21
**.node[80..83].mobility.initialX = uniform(50m, 200m)
**.node[80..83].mobility.initialY = uniform(800m, 950m)
#S22
**.node[84..87].mobility.initialX = uniform(200m, 400m)
**.node[84..87].mobility.initialY = uniform(800m, 950m)
#S23
**.node[88..91].mobility.initialX = uniform(400m, 600m)
**.node[88..91].mobility.initialY = uniform(800m, 950m)
#S24
**.node[92..95].mobility.initialX = uniform(600m, 800m)
**.node[92..95].mobility.initialY = uniform(800m, 950m)
#S25
**.node[96..99].mobility.initialX = uniform(800m, 950m)
**.node[96..99].mobility.initialY = uniform(800m, 950m)


# place it at a random position:
#**.node[*].mobility.initFromDisplayString = true
